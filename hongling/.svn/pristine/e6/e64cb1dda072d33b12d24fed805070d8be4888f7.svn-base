package chinsoft.wsdl;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.6
 * 2014-04-26T10:39:03.283+08:00
 * Generated source version: 2.7.6
 * 
 */
@WebServiceClient(name = "IServiceToLogisticsService", 
                  wsdlLocation = "http://localhost/Services/services/LogisticService?wsdl",
                  targetNamespace = "http://services.redcollar.cn/") 
public class IServiceToLogisticsService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://services.redcollar.cn/", "IServiceToLogisticsService");
    public final static QName IServiceToLogisticsPort = new QName("http://services.redcollar.cn/", "IServiceToLogisticsPort");
    static {
        URL url = null;
        try {
            url = new URL("http://192.168.1.111/Services/services/LogisticService?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(IServiceToLogisticsService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://localhost/Services/services/LogisticService?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public IServiceToLogisticsService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public IServiceToLogisticsService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public IServiceToLogisticsService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    /**
     *
     * @return
     *     returns IServiceToLogistics
     */
    @WebEndpoint(name = "IServiceToLogisticsPort")
    public IServiceToLogistics getIServiceToLogisticsPort() {
        return super.getPort(IServiceToLogisticsPort, IServiceToLogistics.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IServiceToLogistics
     */
    @WebEndpoint(name = "IServiceToLogisticsPort")
    public IServiceToLogistics getIServiceToLogisticsPort(WebServiceFeature... features) {
        return super.getPort(IServiceToLogisticsPort, IServiceToLogistics.class, features);
    }

}
