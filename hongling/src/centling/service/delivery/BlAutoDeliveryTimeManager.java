package centling.service.delivery;

import java.util.Calendar;
import java.util.Date;
import java.util.Timer;
import java.util.TimerTask;

import centling.business.Constant;
import centling.business.BlDeliveryManager;
import centling.util.BlDateUtil;
import chinsoft.core.LogPrinter;

/**
 * 自动发货定时任务
 *
 */
public class BlAutoDeliveryTimeManager {
	public BlAutoDeliveryTimeManager() {
		// 设置定时任务的执行时间
		Calendar calendar = Calendar.getInstance();
		calendar.set(Calendar.HOUR_OF_DAY, Constant.BL_AUTO_DELIVERY_HOUR);
		calendar.set(Calendar.MINUTE, Constant.BL_AUTO_DELIVERY_MINUTE);
		calendar.set(Calendar.SECOND, Constant.BL_AUTO_DELIVERY_SECOND);
		
		// 第一次执行任务的时间
		Date date = calendar.getTime();
		
		// 如果第一次执行定时任务的赶时间小于当前的时间
		// 此时要在第一次定时任务的时间加一天，以便此任务在下个时间点执行
		// 如果不加一天，任务会立即执行
		if(date.before(new Date())) {
			date = BlDateUtil.addDay(date, 1);
		}
//		
		Timer timer = new Timer();
		
		// 指定任务
		TimerTask autoDeliveryTask = new TimerTask() {
			@Override
			public void run() {
				// 判断当前日期是否为周日
				int weekDay = BlDateUtil.getWeekDay(new Date());
				
				// 如果不是周日
				if (weekDay != 1) {
					// 根据当前日期，得到指定天数后的发货日期(周天除外)
					Date deliveryDate = BlDateUtil.addWorkDay(new Date(), Constant.BL_DELIVERY_DAYS);
					
					// 得到发货周期(周)
					int deliveryWeekDay = BlDateUtil.getWeekDay(deliveryDate);
				
					// 得到系统中的星期编号
					deliveryWeekDay = getDeliveryDayId(deliveryWeekDay);
					
					// 如果发货日期不为周日
					if (deliveryWeekDay != 0) {
						// 自动生成发货列表
						int retValue = new BlDeliveryManager().autoGenerateDelivery(deliveryWeekDay,deliveryDate);
						
						if (retValue != 0) {
							LogPrinter.error("自动发货异常");
						}
					// 如果发货日期为周日
					} else {
						LogPrinter.error("自动发货日期计算错误");
					}
				// 周日，不发货
				} else {
					LogPrinter.info("周日，不发货");
				}
			}
		};
		
		// 指定定时任务
		timer.schedule(autoDeliveryTask, date, Constant.BL_PERIOD_DAY);
	}
	
	/**
	 * 根据发货周期得到系统中的ID
	 * @param deliveryWeekDay 发货周期 1-7分别代表周日到周六
	 * @return 系统中的ID
	 */
	protected int getDeliveryDayId(int deliveryWeekDay) {
		int retValue = 0;
		
		// 将返回值转换为系统中的值
		switch(deliveryWeekDay) {
		case 2 :
			retValue = Constant.BL_MONDAY;
			break;
		case 3 :
			retValue = Constant.BL_TUESDAY;
			break;
		case 4 :
			retValue = Constant.BL_WEDNESDAY;
			break;
		case 5 :
			retValue = Constant.BL_THURSDAY;
			break;
		case 6 :
			retValue = Constant.BL_FRIDAY;
			break;
		case 7 :
			retValue = Constant.BL_SATURDAY;
			break;
		default :
			retValue = 0;
		}
		return retValue;
	}
}