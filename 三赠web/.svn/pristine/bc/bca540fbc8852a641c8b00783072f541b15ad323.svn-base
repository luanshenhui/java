<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.lsh.web.mapper.login.dao.LoginDao" >
  <resultMap id="BaseResultMap" type="cn.lsh.web.mapper.login.domain.UserDomain" >
    <id column="person_id" property="personId" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    person_id, name, app_id
  </sql>

  <insert id="insertPerson" parameterType="cn.lsh.web.mapper.login.domain.PersonDomain">
  INSERT INTO person(person_id,name,area,remark,create_time,brithday,type)values(#{person_id},#{name},#{area},#{remark},#{create_time},#{brithday},#{type})
  </insert>
  
   <insert id="insertGroup" parameterType="cn.lsh.web.mapper.login.domain.GroupDomain">
  INSERT INTO `group` (person_id,app_id)values(#{person_id},#{app_id})
  </insert>
  
  <insert id="insertRegister"  parameterType="cn.lsh.web.mapper.login.domain.ManagerDomain">
  INSERT INTO manager (id,account,password,tel)values(#{id},#{account},#{password},#{tel})
  </insert>
  
   <insert id="insertFolt" parameterType="cn.lsh.web.mapper.login.domain.FoltDomain">
  	INSERT INTO folt (person_id,role_type,create_time,c_a,c_b,c_c,c_d,c_e)values(#{person_id},#{role_type},#{create_time},#{c_a},#{c_b},#{c_c},#{c_d},#{c_e})
  </insert>
  
  <insert id="insertRoleVo" parameterType="cn.lsh.web.mapper.login.domain.Role">
   INSERT INTO role (role_type,role_name,c_a,c_b,c_c,c_d,c_e)values(#{role_type},#{role_name},#{c_a},#{c_b},#{c_c},#{c_d},#{c_e})
  </insert>
  
  <update id="updateImgName"  parameterType="cn.lsh.web.mapper.login.domain.ImgDomain">
  	update img set name= #{colorName} where type= #{type}
  </update>
  
  <update id="updateUser" parameterType="cn.lsh.web.mapper.login.domain.ManagerDomain">
  	update manager set password= #{password} where account= #{account} 
  	<if test="tel != null">
  		and tel=#{tel}
  	</if>
  </update>
  
  <update id="updateRole"  parameterType="cn.lsh.web.mapper.login.domain.Role">
  	update role set 
  	<if test="c_a != null">
  		c_a=#{c_a},
  	</if>
  	<if test="c_b != null">
  		c_b=#{c_b},
  	</if>
  	<if test="c_c != null">
  		c_c=#{c_c},
  	</if>
  	<if test="c_d != null">
  		c_d=#{c_d},
  	</if>
  	<if test="c_e != null">
  		c_e=#{c_e},
  	</if>
		role_type=#{role_type}  	
  	where role_type= #{role_type} 
  </update>
  
  <select id="getImgInfo" parameterType="cn.lsh.web.mapper.login.domain.ImgDomain" resultType="cn.lsh.web.mapper.login.domain.ImgDomain">
  	select id,type,name as colorName from img
  </select>
  
  <select id="colorUserVoList" resultType="cn.lsh.web.mapper.login.domain.ColorUserVo" parameterType="cn.lsh.web.mapper.login.domain.ColorUserVo" >
	select r.role_name as userRole,p.person_id, p.remark as leve,(select sum(c_a) from folt f where f.person_id=p.person_id) as ghA, 
	(select sum(c_b) from folt f where f.person_id=p.person_id) as ghB,
	(select sum(c_c) from folt f where f.person_id=p.person_id) as ghC,
	(select sum(c_d) from folt f where f.person_id=p.person_id) as ghD,
	(select sum(c_e) from folt f where f.person_id=p.person_id) as ghE 
	from person p
	left join role r
	on p.name=r.role_type
	where p.person_id in( 
	select app_id from `group`
	where 1=1
	<if test="userRole != null">
		and person_id=#{userRole}
	</if>
	)
  </select>
  
  <select id="GroupbyGroup" resultType="login.model.GroupUserVo" parameterType="cn.lsh.web.mapper.login.domain.GroupDomain" >
	select t.person_id,t.app_id,p.area from 
	(select person_id,app_id
  	from `group` 
  	where 1=1 
  	<if test="person_id != null">
			and person_id = #{person_id}
	</if>
	<if test="person_id == null">
			GROUP BY person_id
	</if>
	) t
	left join person p
	on t.person_id=p.person_id
	where 1=1 
	 <if test="area != null">
			and p.area = #{area}
	</if>
  </select>
  
    <select id="sumFolt" resultType="cn.lsh.web.mapper.login.domain.FoltDomain" parameterType="cn.lsh.web.mapper.login.domain.GroupDomain" >
  	select sum(c_a) as c_a,sum(c_b) as c_b, sum(c_c) as c_c ,sum(c_d) as c_d,sum(c_e) as c_e from folt
		where person_id in
			<foreach collection="list" item="lp" index="index" close=")" open="(" separator=","> 
				  #{lp.app_id}
			</foreach>
  	</select>
  
  <select id="getStreetDraw" resultType="login.model.FoltVo" parameterType="cn.lsh.web.mapper.login.domain.GroupDomain">
	 SELECT DATE_FORMAT(create_time,'%d') as time ,role_type, count(*) as count FROM folt
	 where 1=1 
	 <if test="nowDate != null">
		and	create_time LIKE CONCAT(CONCAT(#{nowDate}),'%')
	 </if>
	  <if test="person_id != null">
		and person_id in
		(select app_id from `group` where person_id=#{person_id})
 	</if>
	GROUP BY time,role_type
  </select>
  
  <select id="getRoleList" resultType="cn.lsh.web.mapper.login.domain.Role" parameterType="cn.lsh.web.mapper.login.domain.Role">
  	select role_type, role_name from role 
  </select>

<select id="getProvinceList" resultType="cn.lsh.web.mapper.login.domain.AreaDomain" parameterType="cn.lsh.web.mapper.login.domain.AreaDomain">
	select provinceid,province,(SELECT count(*) from person s where p.provinceid=s.area) as id from provinces p
</select>
  
  <select id="getOracleDrew" resultType="java.lang.Integer" parameterType="login.model.FoltVo">
  	select count(*)  from folt where 1=1 
  	 <if test="foltColor == 'c_a'">
		and c_a=1
 	</if>
 	 <if test="foltColor == 'c_b'">
		and c_b=1
 	</if>
 	 <if test="foltColor == 'c_c'">
		and c_c=1
 	</if>
 	 <if test="foltColor == 'c_d'">
		and c_d=1
 	</if>
 	 <if test="foltColor == 'c_e'">
		and c_e=1
 	</if>
 	 <if test="personId != null">
		and person_id=#{personId}
 	</if>
	and create_time BETWEEN #{beginTime} and #{overTime}
  </select>
  
  <select id="getLoginManager" resultType="cn.lsh.web.mapper.login.domain.ManagerDomain" parameterType="cn.lsh.web.mapper.login.domain.ManagerDomain">
  	select id , account, password,tel from manager where 1=1
  	<if test="account != null">
  		and account=#{account} 
  	</if>
  	<if test="password != null">
		and password=#{password}
 	</if>
 	<if test="tel != null">
		and tel=#{tel}
 	</if>
  </select>
  
  <select id="findRoleList" resultType="cn.lsh.web.mapper.login.domain.Role" parameterType="cn.lsh.web.mapper.login.domain.Role">
  		select role_type, role_name, c_a, c_b, c_c, c_d, c_e from role where 1=1
  		<if test="role_type != null">
			and role_type=#{role_type}
 		</if>
 		<if test="role_name != null">
  		and role_type not in(
		select name from person where person_id in (
		select app_id from `group` where person_id=#{role_name}
		)
		)
		</if>
  </select>
  
  <select id="getAllList" resultType="cn.lsh.web.mapper.login.domain.RolePersonDomain" parameterType="cn.lsh.web.mapper.login.domain.RolePersonDomain">
  		select type,name from role_person where type not in(
  		select role_type from role
  		)
  </select>
  
  <select id="selectWatchNum" resultType="cn.lsh.web.mapper.login.domain.GroupDomain" parameterType="cn.lsh.web.mapper.login.domain.GroupDomain">
	  select person_id, app_id from `group` where person_id=#{person_id} and app_id=#{app_id}
  </select>
  
  <select id="getClientPerson" resultType="cn.lsh.web.mapper.login.domain.PersonDomain" parameterType="cn.lsh.web.mapper.login.domain.PersonDomain">
  	select person_id,brithday from person where type=1 and person_id=
		(SELECT person_id from `group` where app_id=#{person_id})
  </select>
  
  <select id="getProvinceCode" resultType="cn.lsh.web.mapper.login.domain.AreaDomain" parameterType="cn.lsh.web.mapper.login.domain.PersonDomain">
  		select provinceid , province from provinces where province LIKE CONCAT(CONCAT(#{area}),'%')
  </select>
</mapper>