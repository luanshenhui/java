package com.dpn.ciqqlc.http;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.apache.commons.lang.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Required;
import org.springframework.beans.propertyeditors.CustomDateEditor;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.WebDataBinder;
import org.springframework.web.bind.annotation.InitBinder;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.dpn.ciqqlc.common.util.Constants;
import com.dpn.ciqqlc.common.util.DateUtil;
import com.dpn.ciqqlc.http.form.WarningLinkRuleForm;
import com.dpn.ciqqlc.http.result.AjaxResult;
import com.dpn.ciqqlc.standard.model.CodeLibraryDTO;
import com.dpn.ciqqlc.standard.model.CountryDTO;
import com.dpn.ciqqlc.standard.model.SelectModel;
import com.dpn.ciqqlc.standard.model.VisitConfigurationDTO;
import com.dpn.ciqqlc.standard.model.WarningRuleDto;
import com.dpn.ciqqlc.standard.model.WarningStandardEventDto;
import com.dpn.ciqqlc.standard.service.WarningService;

@Controller
@RequestMapping(value = "/warning")
public class WarningController {

	private final Logger logger_ = LoggerFactory.getLogger(this.getClass());
	
	 @Autowired
	  private WarningService warningService;
	 
	 @InitBinder
		public void InitBinder(WebDataBinder binder) {
			try {
				SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");  
				dateFormat.setLenient(false);  
				binder.registerCustomEditor(Date.class, new CustomDateEditor(dateFormat, true));
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
	 
	 
		/**
		 * 
		 * 列表
		 * 
		 **/
		@RequestMapping("/warningList")
		public String warningList(HttpServletRequest request,WarningRuleDto warningRuleDto){
			try{
		        int pages = 1;
		        if(request.getParameter("page") != null && !"".equals(request.getParameter("page"))) {
		            pages = Integer.parseInt(request.getParameter("page") == null ? "1" : request.getParameter("page"));
		        }
		        warningRuleDto.setFirstRcd(String.valueOf((pages-1)*Constants.PAGE_NUM+1));
		        warningRuleDto.setLastRcd(String.valueOf(pages*Constants.PAGE_NUM+1));
				List<WarningRuleDto> list = warningService.findWarningList(warningRuleDto);
				int counts = warningService.findwarinCount(warningRuleDto);
				request.setAttribute("list", list);
				request.setAttribute("pages", Integer.toString(pages));// 当前页码
		        request.setAttribute("itemInPage", Constants.PAGE_NUM);// 每页显示的记录数
	            request.setAttribute("counts",counts);
			} catch (Exception e) {
				logger_.error("***********/warning/warningList************",e);
			}
			return "warning/list";
		}
		
		@RequestMapping("/addJsp")
		public String addJsp(HttpServletRequest request,WarningRuleDto warningRuleDto){
			return "warning/add";
		}
		
		@RequestMapping("/edit")
		public String edit(HttpServletRequest request,@RequestParam String ruld_id){
			request.setAttribute("ruld_id", ruld_id);
			WarningRuleDto warningRuleDto =new WarningRuleDto();
			warningRuleDto.setRuld_id(ruld_id);
			warningRuleDto.setFirstRcd("0");
			warningRuleDto.setLastRcd("3");
			List<WarningRuleDto> list = warningService.findWarningList(warningRuleDto);
			if(!list.isEmpty()){
				request.setAttribute("obj", list.get(0));
			}
			return "warning/edit";
		}
		
		@ResponseBody
		@RequestMapping("/add")
		public String add(HttpServletRequest request,WarningRuleDto warningRuleDto){
			try {
				warningRuleDto.setFirstRcd("0");
			    warningRuleDto.setLastRcd("2");
				List<WarningRuleDto> list = warningService.findWarningList(warningRuleDto);
				if(list.isEmpty()){
					warningService.insertWarning(warningRuleDto);
					return "success";
				}else{
					return "have";
				}
			} catch (Exception e) {
				e.printStackTrace();
			}
			return "error";
		}
		
		@ResponseBody
		@RequestMapping("/update")
		public String update(HttpServletRequest request,WarningRuleDto warningRuleDto){
			try {
				warningRuleDto.setFirstRcd("0");
			    warningRuleDto.setLastRcd("2");
			    List<WarningRuleDto> list = warningService.findWarningList(warningRuleDto);
			    if(list.isEmpty()){
			    	warningService.updateWarning(warningRuleDto);
			    	return "success";
			    }else{
					return "have";
				}
			} catch (Exception e) {
				e.printStackTrace();
			}
			return "error";
		}
		
		@RequestMapping("/del")
		public String del(HttpServletRequest request,WarningRuleDto warningRuleDto){
			try {
				warningService.deleteWarning(warningRuleDto);
			} catch (Exception e) {
				e.printStackTrace();
			}
			return "redirect:/warning/warningList";
		}
		
		/******************************************规范执法******************************************************************/
		/**
		 * 
		 * 列表
		 * 
		 **/
		@RequestMapping("/guifanList")
		public String guifanList(HttpServletRequest request,WarningStandardEventDto warningStandardEventDto){
			try{
		        int pages = 1;
		        if(request.getParameter("page") != null && !"".equals(request.getParameter("page"))) {
		            pages = Integer.parseInt(request.getParameter("page") == null ? "1" : request.getParameter("page"));
		        }
		        warningStandardEventDto.setFirstRcd(String.valueOf((pages-1)*Constants.PAGE_NUM+1));
		        warningStandardEventDto.setLastRcd(String.valueOf(pages*Constants.PAGE_NUM+1));
				List<WarningStandardEventDto> list = warningService.findGuifanList(warningStandardEventDto);
				int counts = warningService.findGuifanCount(warningStandardEventDto);
				SelectModel model=new SelectModel();
				model.setType("WARING_DP");
				List<SelectModel> typeList =warningService.findCodeLibrary(model);
				request.setAttribute("typeList", typeList);
				request.setAttribute("obj", warningStandardEventDto);
				request.setAttribute("list", list);
				request.setAttribute("pages", Integer.toString(pages));// 当前页码
		        request.setAttribute("itemInPage", Constants.PAGE_NUM);// 每页显示的记录数
	            request.setAttribute("counts",counts);
			} catch (Exception e) {
				logger_.error("***********/warning/guifanList************",e);
			}
			return "warning/guifanList";
		}
		
		
		/******************************************规范执法维护******************************************************************/
		/**
		 * 
		 * 列表
		 * 
		 **/
		@RequestMapping("/guifanWeihuList")
		public String guifanWeihuList(HttpServletRequest request,WarningLinkRuleForm warningLinkRuleForm){
			try{
		        int pages = 1;
		        if(request.getParameter("page") != null && !"".equals(request.getParameter("page"))) {
		            pages = Integer.parseInt(request.getParameter("page") == null ? "1" : request.getParameter("page"));
		        }
		        warningLinkRuleForm.setFirstRcd(String.valueOf((pages-1)*Constants.PAGE_NUM+1));
		        warningLinkRuleForm.setLastRcd(String.valueOf(pages*Constants.PAGE_NUM+1));
				List<WarningLinkRuleForm> list = warningService.findGuifanWeihuList(warningLinkRuleForm);
				int counts = warningService.findGuifanWeihuCount(warningLinkRuleForm);
				SelectModel model=new SelectModel();
				model.setType("WARING_DP");
				List<SelectModel> typeList =warningService.findCodeLibrary(model);
				
				List<WarningLinkRuleForm> linkList = warningService.findTypeRuleList(warningLinkRuleForm);
				request.setAttribute("typeList", typeList);
				request.setAttribute("linkList", linkList);
				request.setAttribute("obj", warningLinkRuleForm);
				request.setAttribute("list", list);
				request.setAttribute("pages", Integer.toString(pages));// 当前页码
		        request.setAttribute("itemInPage", Constants.PAGE_NUM);// 每页显示的记录数
	            request.setAttribute("counts",counts);
			} catch (Exception e) {
				logger_.error("***********/warning/guifanWeihuList************",e);
			}
			return "warning/guifanWeihuList";
		}
		
		
	    @RequestMapping("/editWeihu")
	    public String editWeihu(HttpServletRequest request, WarningLinkRuleForm m){
	    	
	    	if(StringUtils.isNotEmpty(m.getId())){
	    		request.setAttribute("bean", warningService.findWarningLinkRuleFormById(m));
	    	}
	    	
	    	return "warning/editWeihu";
	    }
	    
	    @RequestMapping("/updateWeihu")
	    @ResponseBody
	    public String updateWeihu(HttpServletRequest request,WarningLinkRuleForm m){
	    	
	    	warningService.updateWeihu(m);
	    	
	    	return "success";
	    }
}
