<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.rkylin.oms.system.privilege.dao.MenuGrantDAOImpl">
  <resultMap id="WF_ORG_RESOURCE_AUTHORITYResultMap" type="cn.rkylin.oms.system.privilege.domain.WF_ORG_RESOURCE_AUTHORITY" >
    <id column="RESOURCE_AUTHORITY_ID" property="resourceAuthorityId" jdbcType="VARCHAR" />
    <result column="AUTHORITY_DESC" property="authorityDesc" jdbcType="VARCHAR" />
    <result column="ROLE_ID" property="roleId" jdbcType="VARCHAR" />
    <result column="ROLE_TYPE" property="roleType" jdbcType="VARCHAR" />
    <result column="RESOURCE_ID" property="resourceId" jdbcType="VARCHAR" />
    <result column="AUTHORITY_TYPE" property="authorityType" jdbcType="VARCHAR" />
  </resultMap>
  
  <select id="select_authority" resultMap="WF_ORG_RESOURCE_AUTHORITYResultMap" parameterType="cn.rkylin.oms.system.privilege.domain.WF_ORG_RESOURCE_AUTHORITY" >
    select RESOURCE_AUTHORITY_ID, AUTHORITY_DESC, ROLE_ID, ROLE_TYPE, RESOURCE_ID, AUTHORITY_TYPE
    from WF_ORG_RESOURCE_AUTHORITY RA
    where 1=1
    	<if test="roleId != null">
			and RA.ROLE_ID = #{roleId}
		</if>
    	<if test="resourceId != null">
			and RA.RESOURCE_ID = #{resourceId}
		</if>
  </select>
  
  <select id="getAvailableResource" resultType="java.util.HashMap" parameterType="cn.rkylin.oms.system.privilege.domain.WF_ORG_RESOURCE_AUTHORITY" >
	SELECT CONCAT(RESOURCE_ID , '@' , MENU.MENU_TYPE) AS RESOURCE_ID, MENU.MENU_NAME AS RESOURCE_NAME
	  FROM WF_ORG_RESOURCE_AUTHORITY AUTH, WF_ORG_MENU MENU
	 WHERE MENU.MENU_CODE = AUTH.RESOURCE_ID
	   AND ROLE_ID = #{roleId}
		<if test="parentMenuCode != null">
			AND MENU.PARENT_MENU_CODE = #{parentMenuCode}
		</if>
	   AND AUTH.AUTHORITY_TYPE = #{authorityType}
  </select>
  
  <select id="getUserAvailableResource" resultType="java.util.HashMap" parameterType="cn.rkylin.oms.system.privilege.domain.WF_ORG_RESOURCE_AUTHORITY" >
	SELECT CONCAT(MENU_CODE , '@' , MENU.MENU_TYPE) AS RESOURCE_ID,
	       MENU.MENU_NAME AS RESOURCE_NAME
	  FROM WF_ORG_MENU MENU
	 WHERE MENU.MENU_CODE IN
	       (SELECT RESOURCE_ID
	          FROM WF_ORG_RESOURCE_AUTHORITY AUTH
	         WHERE MENU.MENU_CODE = AUTH.RESOURCE_ID
	           AND ROLE_ID IN
	               (SELECT #{roleId}
	                  FROM DUAL
	                UNION ALL
	                SELECT DISTINCT (R.ROLE_ID) ROLE_ID
	                  FROM WF_ORG_USER_ROLE R
	                 WHERE R.USER_ID = #{roleId}
	                UNION ALL
	                SELECT DISTINCT (U.UNIT_ID) ROLE_ID
	                  FROM WF_ORG_USER_UNIT U
	                 WHERE U.USER_ID = #{roleId}
	                UNION ALL
	                SELECT DISTINCT (S.STATION_ID) ROLE_ID
	                  FROM WF_ORG_USER_STATION S
	                 WHERE S.USER_ID = #{roleId})
	           AND AUTH.AUTHORITY_TYPE = 'available')
	    <if test="parentMenuCode != null">
			AND MENU.PARENT_MENU_CODE = #{parentMenuCode}
		</if>
	AND MENU.MENU_CODE NOT IN
       (SELECT UE.RESOURCE_ID
          FROM WF_ORG_USER_EXCLUDE UE
         WHERE UE.USER_ID = #{roleId})
  </select>
  
  <select id="getUnitStationRoleAvailableResourceCount" resultType="java.lang.String" parameterType="java.util.HashMap" >
	SELECT count(*)
	  FROM WF_ORG_MENU MENU
	 WHERE MENU.MENU_CODE IN
	       (SELECT RESOURCE_ID
	          FROM WF_ORG_RESOURCE_AUTHORITY AUTH
	         WHERE MENU.MENU_CODE = AUTH.RESOURCE_ID
	           AND ROLE_ID IN
	               (SELECT DISTINCT (R.ROLE_ID) ROLE_ID
	                  FROM WF_ORG_USER_ROLE R
	                 WHERE R.USER_ID = #{userId}
	                UNION ALL
	                SELECT DISTINCT (U.UNIT_ID) ROLE_ID
	                  FROM WF_ORG_USER_UNIT U
	                 WHERE U.USER_ID = #{userId}
	                UNION ALL
	                SELECT DISTINCT (S.STATION_ID) ROLE_ID
	                  FROM WF_ORG_USER_STATION S
	                 WHERE S.USER_ID = #{userId})
	           AND AUTH.AUTHORITY_TYPE = 'available')
	   AND MENU.MENU_CODE = #{resourceId}
  </select>
  
  
  <delete id="delete_authority" parameterType="cn.rkylin.oms.system.privilege.domain.WF_ORG_RESOURCE_AUTHORITY" >
    DELETE FROM WF_ORG_RESOURCE_AUTHORITY
    where 1=1
    	<if test="roleId != null">
			and ROLE_ID = #{roleId}
		</if>
    	<if test="resourceId != null">
			and RESOURCE_ID = #{resourceId}
		</if>
    	<if test="authorityType != null">
			and AUTHORITY_TYPE = #{authorityType}
		</if>
  </delete>
  
  <delete id="deleteUserExclude" parameterType="java.util.HashMap" >
	delete from wf_org_user_exclude
    where 1=1
    	<if test="userId != null">
			and user_id = #{userId}
		</if>
	 	<if test="resourceId != null">
			and resource_id = #{resourceId}
		</if>
  </delete>
  
  <insert id="insert_authority" parameterType="cn.rkylin.oms.system.privilege.domain.WF_ORG_RESOURCE_AUTHORITY" >
    insert into WF_ORG_RESOURCE_AUTHORITY (RESOURCE_AUTHORITY_ID, ROLE_ID,
      ROLE_TYPE, RESOURCE_ID, AUTHORITY_TYPE)
    values (#{resourceAuthorityId}, #{roleId}, #{roleType}, #{resourceId}, #{authorityType})
  </insert>
  
  <insert id="insertUserExclude" parameterType="java.util.HashMap" >
	insert into wf_org_user_exclude
	  (user_id, resource_id)
	values
	  (#{userId}, #{resourceId})
  </insert>









<!--   <update id="update" parameterClass="com.dhc.authorization.resource.privilege.domain.WF_ORG_RESOURCE_AUTHORITY" > -->
<!--     update WF_ORG_RESOURCE_AUTHORITY -->
<!--     set RESOURCE_AUTHORITY_ID = #resourceAuthorityId#, -->
<!--       AUTHORITY_DESC = #authorityDesc#, -->
<!--       ROLE_ID = #roleId#, -->
<!--       ROLE_TYPE = #roleType#, -->
<!--       RESOURCE_ID = #resourceId#, -->
<!--       AUTHORITY_TYPE = #authorityType# -->
<!--   </update> -->

  <select id="WF_ORG_RESOURCE_AUTHORITY_getUserResourcePrivilege" resultType="java.lang.Integer" parameterType="java.util.HashMap" >
  	SELECT count(*)
  FROM WF_ORG_MENU MENU
 WHERE MENU.MENU_CODE IN
       (SELECT RESOURCE_ID
          FROM WF_ORG_RESOURCE_AUTHORITY AUTH
         WHERE ROLE_ID IN (SELECT #{userID}
                             FROM DUAL
                           UNION ALL
                           SELECT DISTINCT (R.ROLE_ID) ROLE_ID
                             FROM WF_ORG_USER_ROLE R
                            WHERE R.USER_ID = #{userID}
                           UNION ALL
                           SELECT DISTINCT (U.UNIT_ID) ROLE_ID
                             FROM WF_ORG_USER_UNIT U
                            WHERE U.USER_ID = #{userID}
                           UNION ALL
                           SELECT DISTINCT (S.STATION_ID) ROLE_ID
                             FROM WF_ORG_USER_STATION S
                            WHERE S.USER_ID = #{userID})
           AND AUTH.AUTHORITY_TYPE = 'available')
    <if test="menuID != null">
	  and MENU.MENU_CODE = #{menuID}
	</if>
    <if test="strURL != null">
	 and MENU.MENU_LOCATION = #{strURL}
	</if>
	  AND MENU.MENU_CODE NOT IN
	      (SELECT UE.RESOURCE_ID
	         FROM WF_ORG_USER_EXCLUDE UE
	        WHERE UE.USER_ID = #{userID})
  </select>
  
  <delete id="ROLE_PRIV_DEL" parameterType="java.lang.String">
    delete from wf_org_role_priv where  role_id =#{roleId}
  </delete>
  
  <insert id="ROLE_PRIV_insert" parameterType="cn.rkylin.oms.system.privilege.domain.WF_ORG_ROLE_PRIV">
     insert into wf_org_role_priv (ROLE_PRIV_ID, ROLE_ID,
      ROLE_PRIV_TYPE, PRIV_ID, PRIV_NAME)
    values (#{rolePrivId}, #{roleId}, #{rolePrivType}, #{privId}, #{privName})
  </insert>
  
  <select id="ROLE_PRIV_getRolePrivList" parameterType="java.lang.String" resultType="cn.rkylin.oms.system.privilege.domain.WF_ORG_ROLE_PRIV">
        select ROLE_PRIV_TYPE as rolePrivType,PRIV_ID as privId,PRIV_NAME as privName from wf_org_role_priv where ROLE_ID=#{id}
  </select>
  
</mapper>