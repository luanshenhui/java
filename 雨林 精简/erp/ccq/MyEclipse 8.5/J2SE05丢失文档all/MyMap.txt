package com.yulin.pm;

import java.util.*;

public class MyMap<K, V> {
	class Entry {
		private K key;
		private V value;
		public K getKey() {
			return key;
		}
		public void setKey(K key) {
			this.key = key;
		}
		public V getValue() {
			return value;
		}
		public void setValue(V value) {
			this.value = value;
		}
		@Override
		public int hashCode() {
			
			return key.hashCode();
		}
		@Override
		public boolean equals(Object obj) {
		Entry e=(Entry)obj;//强制类型转换 把Object降级为Entry，因为Object没有key的属性
			return this.key.equals(e.key);
		}
		
	}

	public Set<Entry> entrys=new HashSet<Entry>();
	private Set<K> keys=new HashSet<K>();
	public void add(K key, V value) {
		//当添加的元素，key值已经存在，那么着个元素会把之前的覆盖掉
		keys.add(key);//将key直接添加到key集合
		Entry e=new Entry();
		e.setKey(key);
		e.setValue(value);
		entrys.add(e);

	}

	public V get(K key) {
		for(Entry e:entrys){
			if(e.getKey().equals(key)){
			return e.getValue();
		}
	}
		return null;

	}
	public void remove(K key){
		/*
		 * 只通过key来判断Entry是否相同
		 */
		keys.remove(key);
		Entry e=new Entry();
		e.setKey(key);
		entrys.remove(e);
		
	}
}