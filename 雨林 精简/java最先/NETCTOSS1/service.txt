业务账号：
	用于维护用户登录UNIX服务器的账号及密码，
	与账务账号具有一对多的关系。在SERVICE
	表中用外键字段ACCOUNT_ID记录了账务
	账号的主键。

1、分页组合查询
	1）在页面展现上，与账务账号一致
	2）查询的数据中包含3张表的数据：
		ACCOUNT、SERVICE、COST
	     因此需要做关联查询。
	3）返回的结果以VO封装。
	4）查询总页数时，也要带上关联查询，
		因为要把关联条件拼进来。

2、状态维护
	1）开通、暂停、删除3种状态的逻辑
		基本上与账务账号状态逻辑一致。
	2）开通时，要判断当前业务账号对应的
		账务账号是否处于暂停/删除态，
		如果是，则提示不允许其开通。
		否则更新当前业务账号状态为开通态。
		--在开通的Action中，调用DAO来查询
		   该账务账号对应的业务账号。
		--判断查询到的业务账号，其状态是否
		   为暂停/删除
		--输出属性可以使用一个字符串hintMsg，
		   如果成功时让hintMsg=null，
		   如果报错时让hintMsg="开通失败"，
		   如果判断出账务账号为暂停/删除时
		   让hintMsg="对应的账务账号没开通，不能进行此操作"

3、增加
	1）账务账号改为只读的
	2）输入完身份证后，点击查询账务账号按钮，
		发异步请求，根据身份证查询对应的
		账务账号数据，并把其中的id设置到
		隐藏框中以保存accountId字段，
		把登录名设置到账务账号文本框中。
	3）在跳转到新增页面的Action中要查询
		出所有的资费数据，并以输出属性
		传递给页面，页面通过UI标签来
		动态构建资费类型下拉选。
	
4、更新
	1）由于电信业务月底自动结算，因此不能
		直接更新资费类型。
	2）我们将资费类型更新到备份表
		SERVICE_UPDATE_BAK中，
		当月底对SERVICE表结算完之后，要
		将备份表中的数据同步到SERVICE中，
		这个同步的代码将在spring后的项目
		中去做。
	3）我们更新备份表时，要保证一个service_id
		只存在一份数据：
		--先根据service_id查询备份表，
			如果有数据，则对这条查询到的
			数据进行更新，更新其cost_id
			字段为最新数据。
		--如果查询发现没有数据，则插入
			一条新的数据。

5、查看明细
	参考账务账号查看明细
	
	
	
实体类   dbutil  dao   action  jsp
	
	
