1、servlet是如何运行的?
	比如，在浏览器地址栏输入:
	http://localhost:8888/web01_lab/date
	step1,浏览器依据ip,port建立与servlet容器
	(servlet容器同时也是一个简单的web服务器)之间的连接。
	step2,浏览器打包(按照http协议的要求，将一些数据，
	比如请求资源路径("/web01_lab/date"),请求参数以及一些
	消息头放到请求数据包里面)。
	step3,servlet容器拆包(将请求数据包里面的数据解析
	出来，放到一个request对象里面，同时，还会创建
	一个response对象)。
	step4,servlet容器依据请求资源路径找到对应的
	servlet的配置，然后将该servlet实例化。
	step5,servlet容器会调用servlet对象的service方法
	(会将request对象,response对象作为参数)。
	通过request对象就可以获得请求相关的数据，然后
	进行相应的处理，最后，将处理结果只需要写到
	response对象里面。作为开发人员，不需要懂得
	http协议相关的知识。
	step6,servlet容器从response对象当中取出数据，然后
	打包并发送给浏览器。
	step7,浏览器拆包，生成相应的页面。
	
2、常见的错误及解决方式
	(1)状态码
		状态码是一个三位数字，由w3c定义，表示服务器
	处理请求的一种状态。
	(2)常见的错误
		a, 404 : 依据请求资源路径，找不到对应的资源。
			解决方式:
				方式一：依据http://ip:port/appname/servlet-url
				检查请求地址。
				方式二：检查web.xml文件，注意<servlet-name>
				的配置是否正确。
		b,405: servlet容器找不到service方法
			解决方式： 检查service方法的签名(检查
			方法的返回类型,方法名,参数类型,异常类型)
		c, 500: 系统错误，一般是程序在运行过程当中出现了
		异常。
			解决方式：检查源代码。

3、http协议(了解)
	(1)http协议是什么?
		由w3c制订的一种应用层协议，用来定义浏览器
	与web服务器之间通信的过程以及数据的格式。
	(2)通信的过程
		step1,浏览器建立与web服务器之间的连接
		step2,打包，发送请求
		step3,web服务器处理请求之后，将处理结果
		打包，发送响应
		step4,web服务器关闭连接
		用一句话来说：“一次请求，一次连接”。
		优点：
				web服务器可以利用有限的连接个数为尽可
			能多的客户端(浏览器)进行服务。
	(3)数据的格式	
		1)请求数据包
			a,请求行(请求方式 请求资源路径 协议类型和版本)
			b,若干消息头
					消息头是一些键值对，通信的双方都可以发送。
				比如，浏览器可以发送"User-Agent"消息头，
				告诉服务器浏览器的类型和版本。
					一般来说，消息头是自动生成的。有些时候，
				需要编程生成一些消息头。
			c,实体内容
				如果发送get请求，实体内容为空。
				只有发送post请求时，实体内容才会有数据
				(即请求参数值,比如name=tom),如果发送的
				get请求，请求参数会放在请求资源路径的
				后面。
		2)响应数据包
			a,状态行(协议类型和版本 状态码 状态描述)
				状态码:
					200: 正常
					404: 依据请求地址找不到对应的资源
					500:系统错误，一般是程序运行出现了异常
			b,若干消息头
				 服务器也可以向浏览器发送一些消息头，比如，
				 "content-type",告诉浏览器返回的数据类型以
				 及编码格式。
			c,实体内容
				程序处理的结果，浏览器会取出这些数据，生成
				相应的页面。
4、get请求与post请求
	(1)哪一些情况下，浏览器会发送get请求
		a,直接在浏览器地址栏输入某个地址
		b,点击链接
		c,表单默认的提交方式 			
	(2)哪一些情况下，浏览器会发送post请求
		a,表单设置了method="post"。
			<form action="处理请求的程序" 
			method="get/post">
	(3)get方式的特点
		a,会将请求参数添加到请求资源路径的后面，
	因为请求行最多只能存放大约2K左右的数据，所以，
	只能够提交少量的数据。
		b,get请求会将请求参数显示在浏览器地址栏，
	不安全(路由器会记录这些地址)。
	(4)post方式的特点
		a,会将请求参数添加到实体内容里面，所以，
	可以提交大量的数据。
		b,post请求不会将请求参数显示在浏览器地址栏，
	相对安全(并没有加密)。

5、如何获得请求参数值
	方式一: 
		String request.getParameter(String name);	
	注意:
		a, 参数名如果对应的值不存在，返回null。
		b, 如果没有给参数名赋值值，返回""。
	方式二:
		String[] request.getParameterValues(String name);
	当有多个参数名相同的时候，用该方法。
		比如  ?interest=cooking&interest=snooker
		
6、中文问题
	1)html文件如何包含了中文，应该添加
	<meta http-equiv="content-type" 
		content="text/html;charset=utf-8">
	当然，charset也可以设置为其它支持中文的编码格式，
	比如gbk。
	作用：
		模拟一个消息头(content-type),
		告诉浏览器当前处理的是一个html文档，并且
		编码格式是utf-8
	2)servlet如果要输出中文，应该如何处理
		a,乱码问题产生的原因:
			a1, out.println()默认情况下，会使用
			iso-8859-1去编码。
			a2, 默认情况下，服务器生成的content-type
			消息头设置的编码格式是 iso-8859-1。
		b, 解决方式
			response.setContentType(
				"text/html;charset=utf-8");
	3)如果表单有中文参数值，如何获取?
		a,乱码问题产生的原因
			浏览器会使用打开表单所在的页面的编码格式
		对中文参数值进行编码；
			web服务器一般情况下，会使用iso-8859-1去解码。
		b,解决方式
			方式一:
				step1, 保证表单所在的页面按照指定的编码
				格式打开。
				<meta http-equiv="content-type" 
		content="text/html;charset=utf-8">
				step2, request.setCharacterEncoding("utf-8");
				注意: 只对post请求有效。
			方式二:
				name = new String(
			name.getBytes("iso-8859-1"),
				"utf-8");
	关于编码的知识:
		a, java语言在内存当中的所有的字符都会使用
		unicode编码格式来保存。
		b,编码: 将内存当中以unicode编码格式保存的字
		节数组转换成以某种本地编码格式(gbk,utf-8)保存
		的字节数组。
		c,解码: 将某种本地编码格式对应的字节数组转换成
		unicode编码格式对应的字节数组。
	
	
		
		
			