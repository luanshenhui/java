访问控制（访问修饰）: 控制属性、方法、类的可见范围
  public: 修饰类，属性，方法， 构造器，内部类等
    在任何地方都可见 
  protected：只能修饰类的成员，在类体中使用，在当前package
    中可见（很少使用package作为访问范围），保护的成员主要留给
    子类使用的资源
   默认的：当前package中可见，很少使用
  private： 只能修饰类的成员，在类体中使用，是彻底封装，
   仅在类内部可见。

使用原则：尽可能私有。留给子类使用保护。减少使用公用，默认的
  几乎不使用。
  
  常见方式：私有属性，公用访问方法（get set 方法）。
  
Java 源文规格
  package {0,1}
  
  import {0,n}
  
  public class {0, 1} 只能有一个公有类！文件名与公有类名一致
  
  class {0, n} 一个文件中的多个类都是默认的。
  
  如果 没有公有类，文件名与任意类名一致。
  只有公有类才能在其他包中访问，默认类只能在当前包中访问！
  
 一般情况下：一个文件一个公有类！ 
  
  
将每个格子的绘制，修改为贴图绘制
1）修改了 Cell 类
   将 color 换成了 Image image , image 是格子的贴图
2）修改了 Tetromino 类
  修改创建 方块的构造器，将颜色替换为 贴图
  如：
	cells[0] = new Cell(0, 4, Tetris.T);
3）修改了Tetris 类 
    将图片的访问控制由私有private扩大为 public
    public static Image T;    
    修改了方块的绘制方法paint ，修改为绘制贴图
  	Cell c = cells[i];
	int x = c.getCol() * CELL_SIZE-1;
	int y = c.getRow() * CELL_SIZE-1;
	g.drawImage(c.getImage(), x, y, null);
  
  
  
 俄罗斯方块的基本规则：
1、一个用于摆放小型正方形的平面虚拟场地，其标准大小：
行宽为10，列高为20，以每个小正方形为单位。 
2、一组由4个小型正方形组成的规则图形，
英文称为Tetromino，中文通称为方块共有7种，
分别以S、Z、L、J、I、O、T这7个字母的形状来命名。
I：一次最多消除四层
J（左右）：最多消除三层，或消除二层
L：最多消除三层，或消除二层
O：消除一至二层
S（左右）：最多二层，容易造成孔洞
Z （左右）：最多二层，容易造成孔洞
T：最多二层

（1）玩家操作有：旋转方块，以格子为单位左右移动方块，
      让方块加速落下。
（2）方块移到区域最下方或是着地到其他方块上无法移动时，
     就会固定在该处，而新的方块出现在区域上方开始落下。
（3）当区域中某一列横向格子全部由方块填满，则该列会消失
  并成为玩家的得分。同时删除的列数越多，得分指数上升。
（4）当固定的方块堆到区域最上方而无法消除层数时，则游戏结束。
（6）一般来说，游戏还会提示下一个要落下的方块，熟练的玩家会计算到下一个方块，评估要如何进行。由于游戏能不断进行下去对商业用游戏不太理想，所以一般还会随着游戏的进行而加速提高难度。
（7）预先设置的随机发生器不断地输出单个方块到场地顶部

  方块移到区域最下方或是着地到其他方块上无法移动时，
     就会固定在该处，而新的方块出现在区域上方开始落下。
     
   如果能够下落就下落，否则就着陆到墙上，
    而新的方块出现在区域上方开始落下。
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  


