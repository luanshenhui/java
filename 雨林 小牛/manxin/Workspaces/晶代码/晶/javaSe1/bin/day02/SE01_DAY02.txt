字符串方法
String substring(int startIndex,
                  int endIndex)
截取当前字符串，从startIndex开始截取到endIndex，并将截取的字符串返回。
该方法截取的字符串不包含结束索引对应的字符。
JDK中提供的方法，通常用两个int描述一个范围的时候，都是"含头不含尾"的

重载方法
String substring(int startIndex):
截取当前字符串，从startIndex开始截取到字符串末尾，并返回。


byte[] getBytes(String charsetName)
将当前字符串按照给定的字符集进行编码，并返回编码后的字节数组

编码:将特定的数据按照某种方式转换为2进制       的过程称为编码
      数据--->2进制

解码:将2进制的内容按照某种方式转化为特定      数据的过程称为解码
      2进制--->数据

字符集编码:
gbk:国标编码 简体中文编码集
gb2312:繁体中文编码集
iso8859-1:欧洲常用的一种编码集
UTF-8:世界最通用的编码集。也是最常用的

字符串中支持正则表达式的方法

正则表达式:
以一个特殊的字符串来描述一个格式。让程序
按照这个格式去验证字符串。
那么用于描述格式的这个字符串就是正则表达式。
正则表达式的语法
[]:方括号中可以列举出现的内容，任选其一
   方括号代表一个字符。
   [abc]:可以出现一个字符，只能是a或b或c

[^abc]:可以出现一个字符，但不能是abc

[a-z]:只能出现一个小写英文字母
       a-z表示一项，只不过是一个范围

[a-zA-Z0-9]:描述一个字符，可以是任意数字或字母

[a-z&&[^bc]]:a-z但不能是b或c

.: "."用来描述任意一个字符

\d:描述任意一个数字 等同于[0-9]
\D:描述任意一个非数字字符 等同[^0-9]

\s:任意一个空白字符
\S:描述任意一个非空白字符

\w:任意一个单词字符 等同[a-zA-Z_0-9]
\W:任意一个非单词字符 等同[^\w]

正则表达式中的量词
?:表示前面的内容出现0-1次
   [\w]?  要么有要么没有一个单词字符

*:表示前面的内容出现0-任意次
   [\d]*  任意个数字
   [0-9]*

+:表示前面的内容出现1-任意次
   [\d]+ 1个以上数字

{n}:表示前面的内容出现n次
    [\d]{11} 出现11位数字

{n,m}:表示出现最少n次最多m-1次
[\d]{2,5}
{n,}:表示出现n次以上

():圆括号用于将其内部内容看做一个整体
例如：
    [abc]+  : a ababa
    (abc)+  : abc abcabc 


[\w]+@[a-zA-Z0-9]+(.com|.cn|.net)+



String[] split(String rex)
拆分字符串
根据给定的正则表达式，按照满足的部分进行拆分，将拆后的每部分存入数组并返回
拆分时要注意，若根据拆分的正则表达式后面没有任何内容，则后续的拆分全部抛弃不要。

String replaceAll(String rex,
                    String replcement)

将当前字符串中满足正则表达式的部分替换为给定的字符串，并将结果返回。


commons-lang.jar
Apache的一个子项目
该包对java.lang下的类做了一些功能上的补充。

该包下有一个类叫做StringUtils
该类提供了若干静态方法。这些方法是对
java.lang.String类的功能的补充。




