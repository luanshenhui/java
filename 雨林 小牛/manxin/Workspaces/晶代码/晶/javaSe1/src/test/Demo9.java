package test;
/*
 * 面向对象： 针对于对象来操作   不管你要做什么  都必须先创建对象
 * 面向对象的特点：封装  继承 多态 抽象
 * 封装：方法的调用者并不清楚方法的具体实现  ，只有方法的实现者才知道方法的具体的业务逻辑
 * 构造器： 
 */
public class Demo9 {
	//好像在方法的外面就初始化了这个a的变量  但是现在没有看到初始化的过程
	int a; 
	public void test(){
		//变量要是想使用  那么必须声明并且初始化后才可以使用
		//11 现在的问题是我把a放到了方法外 就可以使用了 为什么？
		System.out.println(a);
		Demo9  aa = new Demo9();
		aa.a = 2;
		
	}
	//11 回答： 因为系统给每一个类都会提供一个默认的无参数的构造器（构造方法）
	//构造器 也叫构造器  他的作用是初始化成员变量
	/*
	 * 构造器的格式  public  类名（）｛｝
	 * 没有返回值   因为他的作用不在于返回值上  而在于初始化
	 * 构造器什么时候被调用
	 * 当你写一个有参数的构造器的时候 那么系统提供的无参数的构造器将被覆盖
	 */
	public Demo9(int a){
		
	}
	public Demo9(){}
}
