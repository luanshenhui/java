分支流程
  if else
 使用建议：
   1) 尽量使用肯定条件，减少使用否定条件，目的是避免思考
     误区，减少逻辑错误。
   2) 减少嵌套层次，一般不要超过两层. 目的是避免思考
     误区，减少逻辑错误。
   3) 注意缩进和括号配对！成对写括号，对齐格式以后，在括号
   中间添代码，如果要删除（注释掉）一定成对的括号的删除。
   4) 适当的减少使用 else (否则的情形)
   
 总之：要保持代码的简洁，和很好可读性。
    理想的代码要接近自然语言。

多路分支
  if else if else
  switch case
  1) if else if else 判断条件灵活适应广泛。
  2) switch case 条件必须是 整数（byte short char int）
    使用限制多，但是性能好于if else.
    
  在工作中 if else 使用的更多些。
  
  char c;
  switch(c){
  	case 'A': ...
  }

循环流程
  for   while   do while
 
 for：“经典的用法”是与次数有关的循环 
 如下循环：循环时候：i=0 1 2 ... n-1 共计 n 次循环 
   for(int i=0; i<n; i++){
   }
  其中 i 是 index（序号）的缩写
  
 while: “经常”处理与次数无关的循环
 
 for 和 while 可以相互替换 
 1) while 可以处理 次数 循环，但是没有 for方便
 2) for(; 循环条件 ;) 与 while(循环条件) 等价 
 3) for(;;) 与 while(true) 等价，都是死循环
 4) 只使用for循环可以处理任何循环逻辑
 5) 在不能明确循环结束条件时候，可以先使用 死循环
    在适当的时候 使用 break 结束循环。
    
 do while 循环 0
 适合循环结束条件在循环体最后的循环流程
 
 
 
 
 
 
 
 
 
   
 











