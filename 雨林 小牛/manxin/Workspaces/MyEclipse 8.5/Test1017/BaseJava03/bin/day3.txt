数组的排序：
	1.冒泡排序：从第一个元素开始，跟他后面的元素比较，如果比后面的元素大，则交换两者的位置。如果数组的长度为n
		则需要n-1轮的比较，每一轮的比较次数递减
		int[] arr = {1,5,9,45,21};
		for(int i=0;i<arr.length-1;i++){
			for(int j=0;j<arr.length-i-1;j++){
			if(arr[j]>arr[j+1]){
				int temp;
				temp=arr[j];
				arr[j]=arr[j+1];
				arr[j+1]=temp;
			}
		   }
		}
		
	2.选择排序：假设第一个元素最大,用一个变量记录第一个元素的下标(就是0)，用这个元素逐一的跟后面的元素比较
		如果有比这个元素大的，则记录这个元素的下标。如果数组的长度为n，则需要n-1轮的比较，每一轮的比较次数递减
		
	3.快速排序/插入排序：查阅资料理解这两种排序
	
方法的声明：
	public 		void  		fun1      (int arg){}
	访问权限 		返回值类型	方法名		参数列表{方法体}
	访问权限：方法能够使用的范围
		public:整个项目内可以使用
		protected:整个包可以使用
		private:在同一个类中才可以使用
		
	返回值类型：方法执行完成后，需要给出的结果，可以是任何的数据类型，如果定义返回值类型，则方法中必须要用
				"return 返回值"作为方法的结尾。如果方法执行后不需要任何结果，那么可以用void声明返回值类型
				
	方法名：方法通过方法名来调用，方法名在定义时，如不是特别需要，不要和父类的方法一致
	
	参数列表：方法在被调用时，必须按照声明的参数列表进行传参
	
	方法的调用：方法必须要由“对象”来调用。
	
	案例一：
		猜数字游戏：
		1.随机生成4个个位数
		2.向控制台输入你猜的数
		3.显示你猜的结果a,b
		4.a表示数对，位置不对的个数
		5.b表示，数和位置都对的个数
		6.全部猜中游戏结束，显示猜的次数
		
		升级：选择游戏等级，简单，中级，困难，大师，分别猜4,6,8,10个数字
	
	
         
		1.从控制台输入一个字符串，记录每个字符出现的个数
