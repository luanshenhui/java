# Default Properties file for use by StdSchedulerFactory
# to create a Quartz Scheduler Instance, if a different
# properties file is not explicitly specified.
#
org.quartz.scheduler.instanceId = AUTO
org.quartz.scheduler.instanceName = DefaultQuartzScheduler
org.quartz.scheduler.skipUpdateCheck: true

#\u7ebf\u7a0b\u7ba1\u7406
org.quartz.threadPool.class = org.quartz.simpl.SimpleThreadPool
org.quartz.threadPool.threadCount = 20
org.quartz.threadPool.threadPriority = 5
org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread = true
#\u5b58\u50a8\u914d\u7f6e
org.quartz.jobStore.isClustered = true
org.quartz.jobStore.misfireThreshold = 40000
org.quartz.jobStore.clusterCheckinInterval = 20000
org.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX
org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.StdJDBCDelegate
org.quartz.jobStore.useProperties=false
#org.quartz.jobStore.selectWithLockSQL = SELECT * FROM {0}LOCKS WHERE LOCK_NAME = ? FOR UPDATE
org.quartz.jobStore.tablePrefix = QRTZ_
org.quartz.jobStore.dataSource = myDS
# \u6570\u636e\u5e93\u8fde\u63a5
org.quartz.dataSource.myDS.connectionProvider.class:cn.com.cgbchina.scheduler.util.DruidConnectionProvider
org.quartz.dataSource.myDS.driver:${jdbcDriver}
org.quartz.dataSource.myDS.URL: ${writer.url}
org.quartz.dataSource.myDS.user: ${writer.username}
org.quartz.dataSource.myDS.password: ${writer.password}
org.quartz.dataSource.myDS.maxConnections : 50
org.quartz.dataSource.myDS.validationQuery: select 0 from dual
