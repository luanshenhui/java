package cn.rkylin.oms.system.user.controller;

import java.net.URLDecoder;
import java.util.HashMap;
import java.util.Map;

import org.apache.commons.lang.StringUtils;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.github.pagehelper.PageInfo;

import cn.rkylin.core.controller.ApolloController;
import cn.rkylin.oms.common.context.CurrentUser;
import cn.rkylin.oms.common.context.WebContextFactory;
import cn.rkylin.oms.system.shop.vo.ShopVO;
import cn.rkylin.oms.system.user.dao.UserDAOImpl;
import cn.rkylin.oms.system.user.service.IUserService;
import cn.rkylin.oms.system.user.vo.UserVO;

/**
 * 用户控制器
 * 
 * @author wangxiaoyi
 * @version 1.0
 * @created 2017年2月15日
 */
@Controller
@RequestMapping("/user")
public class UserController extends ApolloController {
	private static final Log logger = LogFactory.getLog(UserController.class);
	// 常量定义
	private static final String GOTO_INDEX = "redirect:/index.html"; //s 跳转到首页

	@Autowired
	private IUserService userService;
	/**
	 * 构造函数
	 */
	public UserController() {

	}


	/**
	 * 跳转到店铺列表
	 */
	@RequestMapping(value = "/gotoIndex")
	public String gotoShopList() {
		return GOTO_INDEX;
	}

	/**
	 * 登录
	 * 
	 * @param account 登录帐户
	 * @param password 登录密码
	 * @param captcha 验证码
	 * @return 成功转到首页 失败给出错误提示
	 * @throws Exception
	 */
	@ResponseBody
	@RequestMapping(value = "/login", method = RequestMethod.POST)
	public Map<String, Object> login(String account, String password, String captcha) throws Exception {
		Map<String, Object> returnMap = new HashMap<String, Object>();
		try {
			// TODO 待完成
			CurrentUser currUser = new CurrentUser();
			currUser.setUserId("admin");
			currUser.setUserName("超级管理员");
			currUser.setOrgId("rootOrg");
			currUser.setOrgName("瑞金麟集团");
			WebContextFactory.getWebContext().setCurrentUser(currUser);
			returnMap.put(JSON_RESULT, SUCCESS);
		} catch (Exception ex) {
			logger.error(ex);
			returnMap.put(JSON_RESULT, FAILED);
			returnMap.put(JSON_MSG, ex.getMessage());
		}
		return returnMap;
	}
	
	/**
     * 跳转到店铺列表
     *
     * @param quickSearch 快速查询条件
     * @return 返回值JSON格式字符串
     * @Param start 第几页
     * @Param length 每页多少行
     */
    @ResponseBody
    @RequestMapping(value = "/userList", method = RequestMethod.GET)
    public Map<String, Object> getShopList(String quickSearch,UserVO user,
                                           @RequestParam(required = false, defaultValue = "0") int start,
                                           @RequestParam(required = false, defaultValue = "10") int length)
            throws Exception {
        // 用于返回值的json对象
        Map<String, Object> returnMap = new HashMap<String, Object>();
        CurrentUser currentUser = WebContextFactory.getWebContext().getCurrentUser();
        try {
            // 前台搜索条件
            quickSearch = URLDecoder.decode(quickSearch, "UTF-8");
            // 处理分页
            if (length == -1) {
                length = Integer.MAX_VALUE;
            }
            int page = start / length + 1;
            // 处理快速查询条件
            UserVO param = new UserVO();
            if (StringUtils.isNotEmpty(quickSearch)) {
                param.setSearchCondition(quickSearch);
            }
            // 处理转义的字段
            Map<String, String> replaceFieldsMap = new HashMap<String, String>();
            replaceFieldsMap.put("validateStatus", "validate");
            replaceFieldsMap.put("status", "enable");

            // 排序语句生成
            String orderStatement = getOrderString(UserDAOImpl.class.getName(), "pageSelectUser",
                    replaceFieldsMap);
            if (StringUtils.isNotEmpty(orderStatement)) {
                param.setOrderBy(orderStatement);
            }

            // 获取分页数据
//            PageInfo<UserVO> userVOList = userService.findByWhere(page, length, param);

            // 设置返回结果内容
//            returnMap.put(JSON_RESULT, SUCCESS);
//            returnMap.put(RECORDS_FILTERED, userVOList.getTotal());
//            returnMap.put(RECORDS_TOTAL, userVOList.getTotal());
//            returnMap.put(RETURN_DATA, userVOList.getList());
        } catch (Exception ex) {
            logger.error(ex);
            returnMap.put(JSON_RESULT, FAILED);
            returnMap.put(JSON_MSG, ex.getMessage());
        }
        // 生成返回结果json串，null内容也需要返回
        return returnMap;
    }

}