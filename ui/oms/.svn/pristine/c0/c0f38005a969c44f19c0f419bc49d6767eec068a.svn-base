package cn.rkylin.oms.system.role.service;

import java.util.ArrayList;
import java.util.List;
import cn.rkylin.apollo.common.util.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cache.annotation.CachePut;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.github.pagehelper.PageInfo;

import cn.rkylin.core.service.ApolloService;
import cn.rkylin.oms.system.menu.dao.IMenuDAO;
import cn.rkylin.oms.system.menu.domain.WF_ORG_MENU;
import cn.rkylin.oms.system.position.dao.IPositionDAO;
import cn.rkylin.oms.system.position.domain.WF_ORG_STATION;
import cn.rkylin.oms.system.role.dao.IRoleDAO;
import cn.rkylin.oms.system.role.domain.WF_ORG_ROLE;
import cn.rkylin.oms.system.role.vo.RoleVo;
import cn.rkylin.oms.system.shop.vo.ShopVO;
import cn.rkylin.oms.system.unit.dao.IUnitDAO;
import cn.rkylin.oms.system.unit.domain.WF_ORG_UNIT;
import cn.rkylin.oms.system.user.dao.IUserDAO;
import cn.rkylin.oms.system.user.domain.WF_ORG_USER;
import cn.rkylin.oms.system.user.service.IUserService;
import cn.rkylin.oms.system.user.vo.UserVO;

@Service("roleService")
public class RoleServiceImple extends ApolloService implements IRoleService{
	@Autowired
	private IRoleDAO iroleDAO;
	@Autowired
	private IUnitDAO iunitDAO;
	@Autowired
	private IUserDAO iuserDAO;
	@Autowired
	private IMenuDAO imenuDAO;
	
	public PageInfo<RoleVo> findByWhere(int page, int rows, RoleVo roleVo) throws Exception{
		PageInfo<RoleVo> roleVOList = findPage(page, rows, "getRoleByCondition", roleVo);
		
		return roleVOList;
		
		
	}

	@Override
	public WF_ORG_ROLE getRoleDetail(String roleID) throws Exception {
		// TODO Auto-generated method stub
		return null;
	}


	
	@Transactional
	@CachePut(value="role", key="T(String).valueOf('role:').concat(#roleVo.roleId)")
	public void insert(RoleVo roleVo) throws Exception{
		
		WF_ORG_ROLE role = new WF_ORG_ROLE();
//		BeanUtils.copyProperties(roleVo, role);
		iroleDAO.insert("insertRole", roleVo);
	}
	

	@Transactional
	public void delete(String roleId) throws Exception{
		iroleDAO.delete("deleteRole", roleId);
		iroleDAO.delete("deleteRoleUnit", roleId);
		// 删除角色下的所有人员
		iroleDAO.delete("deleteRoleUser", roleId);
	}
}
